# Metadata 
global:
  environment: prod
  product: cicd
  subsystem: samples
application: homepage

# default registry and image
registry: ghcr.io
repository: gethomepage/homepage

# version of the application 
# used as docker image version as not specified explicitly
version: v0.10.9

# workload tuning
workload:
  # Two replicas (default is 3)
  replicas: 2
  # custom cluster role. clusterRole with id 'discovery' is defined bellow
  clusterRole: discovery

# additional environment variables to be added to all containers
# of the application.
envs:
  # env vars to be used in homepage config  
  HOMEPAGE_VAR_UNIFI_PASSWORD: "passw0rd"
  HOMEPAGE_VAR_UNIFI_USERNAME: "homepage"

clusterRoles:
  # cluster role with id 'homepage'.
  # Will be expanded to 'samples-prod-homepage-discovery' according to 
  # default naming conventions for metadata.name.
  # Used for homepage to allow k8s discovery
  discovery:
    rules:
      - apiGroups: [""]
        resources: ["nodes", "pods","namespaces"]  
        verbs: ["get", "list"]
      - apiGroups: ["networking.k8s.io"]
        resources: ["ingresses"]
        verbs: ["get", "list"]
      - apiGroups: ["metrics.k8s.io"]
        resources: ["pods", "nodes"]
        verbs: ["get", "list"]


configMaps:
  # ConfigMap wih id 'config' 
  # Will be expanded to 'samples-homepage-config' according to 
  # default naming conventions for metadata.name 
  # Holds homepage config.
  config:
    containers: []
    data:
      bookmarks.yaml: '{}'
      docker.yaml: '{}'
      kubernetes.yaml: |
        mode: cluster      
      services.yaml: '{}'
      settings.yaml: '{}'
      widgets.yaml: |
        - unifi_console:
            url: https://unifi.local
            password: '{{HOMEPAGE_VAR_UNIFI_PASSWORD}}'
            username: '{{HOMEPAGE_VAR_UNIFI_USERNAME}}' 

# application workload main container
applicationContainer:
  spec:
    ports:
      - containerPort: 3000
        name: http
        protocol: TCP
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File

initContainers:
  # Application workload pod init container with id 'copy-config'
  # Homepage reads configs and writes its data to the same dir so to have this dir RW:
  #   - ConfigMap with homepage config is mounted as 'config-ro' volume
  #   - Homepage is mounted as emptyDir volume
  #   - init container copies file from 'config-ro' to config dir volume
  copy-config:
    image:
      registry: docker.io
      repository: alpine
      version: 3.21.3
    spec:
      command:
        - sh
        - '-c'
        - |
          cp -Lr /config-ro/* /config/

volumes:
  # Application workload volume with id 'config'
  # Holds homepage /app/config directory
  config:
    mounts:
      application: /app/config
      copy-config: /config
  # Application workload volume with id 'config'
  # Loads config files content from configmap with id 'config'
  config-ro:
    configMap: config
    mounts:
      copy-config: /config-ro

services:
  # Service with id 'ui' (will be expanded to 'samples-homepage-ui' according to default naming conventions for metadata.name  )
  ui:
    ports:
      http: {}

ingresses:
  # Ingress with id 'ui' (will be expanded to 'samples-homepage-ui' according to default naming conventions for metadata.name  )
  ui:
    services:
      # bind to service with id 'ui'
      ui:
        hosts:
          - homepage.local
        ports:
          # expose service port 'http'. Path is overriden as default is /[service port name]
          http:
            - path: /