manifest should match snapshot:
  1: |
    apiVersion: v1
    data:
      value1: test
      value2: "123"
    kind: ConfigMap
    metadata:
      annotations:
        extra-annotation: annotation value
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        extra-label: label value
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-config1
      namespace: my-namespace
  2: |
    apiVersion: v1
    data:
      value: test
    kind: ConfigMap
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-config2
      namespace: some-subsystem-test
  3: |
    apiVersion: v1
    data:
      EXORDIS_APPLICATION: some-subsystem-some-application
      EXORDIS_ENVIRONMENT: test
      EXORDIS_INSTANCE: some-instance
      EXORDIS_PRODUCT: Some Product
      EXORDIS_SUBSYSTEM: some-subsystem
      SUBSYSTEM: wrong-subsystem
      TEST: 123
    kind: ConfigMap
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-envs
      namespace: some-subsystem-test
  4: |
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-cleanup
      namespace: some-subsystem-test
    spec:
      concurrencyPolicy: Forbid
      failedJobsHistoryLimit: 1
      jobTemplate:
        spec:
          template:
            metadata:
              annotations: null
              labels:
                app.kubernetes.io/component: some-subsystem-some-application
                app.kubernetes.io/instance: some-instance
                app.kubernetes.io/managed-by: helm
                app.kubernetes.io/name: some-subsystem-some-application
                app.kubernetes.io/part-of: some-subsystem
                app.kubernetes.io/version: 0.0.0
                exordis/application: some-subsystem-some-application
                exordis/application-instance: some-instance
                exordis/application-type: service
                exordis/environment: test
                exordis/product: Some Product
                exordis/subsystem: some-subsystem
                helm.sh/chart: cicd-subsystem-application-0.1.0
            spec:
              containers:
                - args:
                    - tag
                    - delete
                    - --registry
                  envFrom:
                    - configMapRef:
                        name: some-subsystem-some-application-some-instance-envs
                    - secretRef:
                        name: some-subsystem-some-application-some-instance-secret2
                  image: registry.gitlab.com/knst/cy/registry/cicd-docker-registry-cleaner:0.1.0
                  imagePullPolicy: IfNotPresent
                  name: main
                  resources:
                    limits:
                      cpu: 200m
                      memory: 1024Mi
                    requests:
                      cpu: 2m
                      memory: 70Mi
                  volumeMounts:
                    - mountPath: /some-data
                      name: volume2
              initContainers:
                - envFrom:
                    - configMapRef:
                        name: some-subsystem-some-application-some-instance-envs
                  image: registry.gitlab.com/cleanup-init:0.0.0
                  imagePullPolicy: IfNotPresent
                  name: cleanup-init
                  resources:
                    limits:
                      cpu: 200m
                      memory: 1024Mi
                    requests:
                      cpu: 2m
                      memory: 70Mi
                  volumeMounts: null
                - envFrom:
                    - configMapRef:
                        name: some-subsystem-some-application-some-instance-envs
                  image: registry.gitlab.com/software-development/subsystems/some-subsystem/data-content-templates:1.24.0-dev.5
                  imagePullPolicy: Always
                  name: templates
                  resources:
                    limits:
                      cpu: 200m
                      memory: 1024Mi
                    requests:
                      cpu: 2m
                      memory: 70Mi
                  volumeMounts:
                    - mountPath: /data/templates/generated
                      name: templates-data-templates-generated
                    - mountPath: /data/templates/original
                      name: templates-data-templates-original
              restartPolicy: Never
              serviceAccountName: default
              volumes:
                - name: mypvc
                  persistentVolumeClaim:
                    claimName: some-subsystem-some-application-some-instance-mypvc
                - emptyDir:
                    sizeLimit: 200Mi
                  name: templates-data-templates-generated
                - emptyDir:
                    sizeLimit: 200Mi
                  name: templates-data-templates-original
                - emptyDir:
                    sizeLimit: 100Mi
                  name: volume2
          ttlSecondsAfterFinished: 86400
      schedule: 0 6 * * *
  5: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance
      namespace: some-subsystem-test
    spec:
      replicas: 3
      revisionHistoryLimit: 1
      selector:
        matchLabels:
          exordis/application: some-subsystem-some-application
          exordis/application-instance: some-instance
          exordis/environment: test
          exordis/subsystem: some-subsystem
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/configMap.config2: e996f2f14f1f85029d6039bcd3fc0302b9168bcc9dc0fadf23f658f191299d02
            checksum/configMap.envs: 32896ea2987fd7d72f58033aa647e04047681d47e1583f757d857b7707629b5d
            checksum/secret.secret2: 8e0836f50407f40dc36bf200910416c00f82b8bf5284ab96e908b1d709eb65e3
          labels:
            app.kubernetes.io/component: some-subsystem-some-application
            app.kubernetes.io/instance: some-instance
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: some-subsystem-some-application
            app.kubernetes.io/part-of: some-subsystem
            app.kubernetes.io/version: 0.0.0
            exordis/application: some-subsystem-some-application
            exordis/application-instance: some-instance
            exordis/application-type: service
            exordis/environment: test
            exordis/product: Some Product
            exordis/subsystem: some-subsystem
            helm.sh/chart: cicd-subsystem-application-0.1.0
        spec:
          containers:
            - envFrom:
                - configMapRef:
                    name: some-subsystem-some-application-some-instance-config2
                - configMapRef:
                    name: some-subsystem-some-application-some-instance-envs
                - secretRef:
                    name: some-subsystem-some-application-some-instance-secret2
              image: registry.gitlab.com/some-subsystem-some-application:0.0.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 5
                httpGet:
                  path: /healthcheck/live
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 10
              name: application
              readinessProbe:
                httpGet:
                  path: /healthcheck/ready
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: 200m
                  memory: 1024Mi
                requests:
                  cpu: 2m
                  memory: 70Mi
              startupProbe:
                failureThreshold: 20
                httpGet:
                  path: /healthcheck/live
                  port: 8080
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 10
              volumeMounts:
                - mountPath: /pvc-data
                  name: mypvc
                - mountPath: /data/templates/generated
                  name: templates-data-templates-generated
                - mountPath: /data/templates/original
                  name: templates-data-templates-original
                - mountPath: /some-data
                  name: volume1
            - envFrom:
                - configMapRef:
                    name: some-subsystem-some-application-some-instance-envs
              image: registry.gitlab.com/jsreport:0.0.0
              imagePullPolicy: IfNotPresent
              name: jsreport
              resources:
                limits:
                  cpu: 200m
                  memory: 1024Mi
                requests:
                  cpu: 2m
                  memory: 70Mi
              volumeMounts:
                - mountPath: /jsreport
                  name: templates-data-templates-generated
                - mountPath: /some-another-data-but-same-as-for-applicationContainer
                  name: volume1
          initContainers:
            - envFrom:
                - configMapRef:
                    name: some-subsystem-some-application-some-instance-envs
              image: registry.gitlab.com/my-default-image:0.0.0
              imagePullPolicy: IfNotPresent
              name: migration
              resources:
                limits:
                  cpu: 200m
                  memory: 1024Mi
                requests:
                  cpu: 2m
                  memory: 70Mi
              volumeMounts: null
            - envFrom:
                - configMapRef:
                    name: some-subsystem-some-application-some-instance-envs
              image: registry.gitlab.com/software-development/subsystems/some-subsystem/data-content-templates:1.24.0-dev.5
              imagePullPolicy: Always
              name: templates
              resources:
                limits:
                  cpu: 200m
                  memory: 1024Mi
                requests:
                  cpu: 2m
                  memory: 70Mi
              volumeMounts:
                - mountPath: /data/templates/generated
                  name: templates-data-templates-generated
                - mountPath: /data/templates/original
                  name: templates-data-templates-original
          volumes:
            - name: mypvc
              persistentVolumeClaim:
                claimName: some-subsystem-some-application-some-instance-mypvc
            - emptyDir:
                sizeLimit: 200Mi
              name: templates-data-templates-generated
            - emptyDir:
                sizeLimit: 200Mi
              name: templates-data-templates-original
            - emptyDir:
                sizeLimit: 100Mi
              name: volume1
  6: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-foreign
      namespace: some-subsystem-test
    spec:
      ingressClassName: nginx
      rules:
        - host: service-not-managed-with-chart.exordis.com
          http:
            paths:
              - backend:
                  service:
                    name: service-not-managed-with-chart
                    port:
                      number: 80
                path: /
                pathType: ImplementationSpecific
      tls:
        - hosts:
            - service-not-managed-with-chart.exordis.com
          secretName: some-subsystem-some-application-some-instance-foreign-tls
  7: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-internal
      namespace: some-subsystem-test
    spec:
      ingressClassName: nginx
      rules:
        - host: k3s.local
          http:
            paths:
              - backend:
                  service:
                    name: some-subsystem-some-application-some-instance-service-a
                    port:
                      number: 80
                path: /api/v3(/|$)(.*)
                pathType: Prefix
              - backend:
                  service:
                    name: some-subsystem-some-application-some-instance-service-a
                    port:
                      number: 80
                path: /
                pathType: Prefix
      tls:
        - hosts:
            - k3s.local
          secretName: some-subsystem-some-application-some-instance-internal-tls
  8: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        aaa: "1"
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
        nginx.ingress.kubernetes.io/proxy-buffering: "off"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
        nginx.ingress.kubernetes.io/use-regex: "true"
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-public
      namespace: some-subsystem-test
    spec:
      ingressClassName: nginx-public
      rules:
        - host: service-api.exordis.com
          http:
            paths:
              - backend:
                  service:
                    name: some-subsystem-some-application-some-instance-service-b
                    port:
                      number: 80
                path: /public-api-one
                pathType: Prefix
              - backend:
                  service:
                    name: some-subsystem-some-application-some-instance-service-b
                    port:
                      number: 80
                path: /public-api-two
                pathType: Prefix
        - host: service-api2.exordis.com
          http:
            paths:
              - backend:
                  service:
                    name: some-subsystem-some-application-some-instance-service-b
                    port:
                      number: 80
                path: /public-api-one
                pathType: Prefix
              - backend:
                  service:
                    name: some-subsystem-some-application-some-instance-service-b
                    port:
                      number: 80
                path: /public-api-two
                pathType: Prefix
      tls:
        - hosts:
            - service-api.exordis.com
            - service-api2.exordis.com
          secretName: some-subsystem-some-application-some-instance-public-tls
  9: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-mypvc
      namespace: some-subsystem-test
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
  10: |
    apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        extra-annotation: annotation value
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        extra-label: label value
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-secret1
      namespace: my-namespace
    stringData:
      password: passw0rd
  11: |
    apiVersion: v1
    kind: Secret
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-secret2
      namespace: some-subsystem-test
    stringData:
      password: passw0rd
  12: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-service-a
      namespace: some-subsystem-test
    spec:
      endpoints:
        - basicAuth:
            password:
              key: Metrics__Authentication__Password
              name: some-subsystem-some-application-some-instance-main
            username:
              key: Metrics__Authentication__Username
              name: some-subsystem-some-application-some-instance-main
          path: /metrics
      selector:
        matchLabels:
          exordis/application: some-subsystem-some-application
          exordis/application-instance: some-instance
          exordis/environment: test
          exordis/subsystem: some-subsystem
  13: |
    apiVersion: v1
    kind: Service
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-service-a
      namespace: some-subsystem-test
    spec:
      ports:
        - name: service-a-8080
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: service-a-8081
          port: 8081
          protocol: TCP
          targetPort: 8080
      selector:
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/environment: test
        exordis/subsystem: some-subsystem
      sessionAffinity: None
  14: |
    apiVersion: v1
    kind: Service
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: some-subsystem-some-application
        app.kubernetes.io/instance: some-instance
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: some-subsystem-some-application
        app.kubernetes.io/part-of: some-subsystem
        app.kubernetes.io/version: 0.0.0
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: some-subsystem
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: some-subsystem-some-application-some-instance-service-b
      namespace: some-subsystem-test
    spec:
      ports:
        - name: service-b-8181
          port: 8181
          protocol: TCP
          targetPort: 8080
      selector:
        exordis/application: some-subsystem-some-application
        exordis/application-instance: some-instance
        exordis/environment: test
        exordis/subsystem: some-subsystem
      sessionAffinity: None
