manifest should match snapshot:
  1: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-test-sample-docs-application
    rules:
      - apiGroups:
          - ""
        resources:
          - namespaces
          - pods
          - nodes
        verbs:
          - get
          - list
  2: |
    apiVersion: v1
    binaryData: {}
    data:
      value1: test
      value2: "123"
    kind: ConfigMap
    metadata:
      annotations:
        extra-annotation: annotation value
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        extra-label: label value
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-config-map-full-metadata
      namespace: my-namespace
  3: |
    apiVersion: v1
    binaryData: {}
    data:
      value: test1
    kind: ConfigMap
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-config-map-with-containers
      namespace: cicd-test
  4: |
    apiVersion: v1
    binaryData: {}
    data:
      value: test2
    kind: ConfigMap
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-config-map-without-containers
      namespace: cicd-test
  5: |
    apiVersion: v1
    binaryData: {}
    data:
      EXORDIS_APPLICATION: cicd-sample
      EXORDIS_ENVIRONMENT: test
      EXORDIS_INSTANCE: docs
      EXORDIS_PRODUCT: Some Product
      EXORDIS_SUBSYSTEM: cicd
      SUBSYSTEM: wrong-subsystem
      TEST: 123
    kind: ConfigMap
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-envs
      namespace: cicd-test
  6: |
    apiVersion: v1
    binaryData: {}
    data:
      config.yml: |
        login: "{{ .LOGIN }}"
        password: "{{ .PASSWORD }}"
    kind: ConfigMap
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-external-secret-template
      namespace: cicd-test
  7: |
    apiVersion: batch/v1
    kind: CronJob
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-cleanup
      namespace: cicd-test
    spec:
      concurrencyPolicy: Forbid
      failedJobsHistoryLimit: 1
      jobTemplate:
        spec:
          template:
            metadata:
              annotations:
                custom-annotation: custom annotation
              labels:
                app.kubernetes.io/component: cicd-sample
                app.kubernetes.io/instance: docs
                app.kubernetes.io/managed-by: helm
                app.kubernetes.io/name: cicd-sample
                app.kubernetes.io/part-of: cicd
                app.kubernetes.io/version: 1.0.0
                custom-label: custom label
                exordis/application: cicd-sample
                exordis/application-instance: docs
                exordis/application-type: service
                exordis/environment: test
                exordis/product: Some Product
                exordis/subsystem: cicd
                helm.sh/chart: cicd-subsystem-application-0.1.0
            spec:
              containers:
                - args:
                    - tag
                    - delete
                    - --registry
                  envFrom:
                    - secretRef:
                        name: cicd-sample-docs-external-full
                    - secretRef:
                        name: cicd-sample-docs-secret-without-containers
                    - secretRef:
                        name: cicd-sample-docs-secret-with-containers
                    - configMapRef:
                        name: cicd-sample-docs-envs
                    - configMapRef:
                        name: cicd-sample-docs-config-map-without-containers
                  image: registry.gitlab.com/cicd-unittests:1.0.0
                  imagePullPolicy: IfNotPresent
                  name: main
                  resources:
                    limits:
                      cpu: 200m
                      memory: 256Mi
                    requests:
                      cpu: 50m
                      memory: 64Mi
                  volumeMounts:
                    - mountPath: /some-data
                      name: volume2
              initContainers:
                - envFrom:
                    - secretRef:
                        name: cicd-sample-docs-external-full
                    - secretRef:
                        name: cicd-sample-docs-secret-without-containers
                    - configMapRef:
                        name: cicd-sample-docs-envs
                    - configMapRef:
                        name: cicd-sample-docs-config-map-without-containers
                  image: registry.gitlab.com/cicd-sample/cleanup-init:1.0.0
                  imagePullPolicy: IfNotPresent
                  name: cleanup-init
                  resources:
                    limits:
                      cpu: 200m
                      memory: 256Mi
                    requests:
                      cpu: 50m
                      memory: 64Mi
                  volumeMounts: []
              restartPolicy: Never
              serviceAccountName: default
              volumes:
                - emptyDir:
                    sizeLimit: 300Mi
                  name: volume2
          ttlSecondsAfterFinished: 86400
      schedule: 0 6 * * *
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/application-workload: "true"
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs
      namespace: cicd-test
    spec:
      replicas: 3
      revisionHistoryLimit: 2
      selector:
        matchLabels:
          exordis/application: cicd-sample
          exordis/application-instance: docs
          exordis/application-workload: "true"
          exordis/environment: test
          exordis/subsystem: cicd
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 25%
        type: RollingUpdate
      template:
        metadata:
          annotations:
            checksum/configMap.config-map-with-containers: 48b7e320feb03b105aa89ed415344c030af90d34a34c66f56146d9f0fd2da3e3
            checksum/configMap.config-map-without-containers: 1dbfa263d171e565d412b904c69bdf60fc6bc8db2fcb31e13049242a8bbdecac
            checksum/configMap.envs: 7804c1a2bc6fb98bc7b87c036f6bdb678f897e534204c2e4efd7d881bf5b2924
            checksum/configMap.external-secret-template: f921d5d8c41b9909941321f0d31975eb7ca6d83cba279a6fa91b5f035c9c3f56
            checksum/secret.secret-with-containers: 8e0836f50407f40dc36bf200910416c00f82b8bf5284ab96e908b1d709eb65e3
            checksum/secret.secret-without-containers: 2e931d517cebd760f5460ea95663a82d8df2673e2c075918c21b33c96bfd6686
            custom-annotation: custom annotation
          labels:
            app.kubernetes.io/component: cicd-sample
            app.kubernetes.io/instance: docs
            app.kubernetes.io/managed-by: helm
            app.kubernetes.io/name: cicd-sample
            app.kubernetes.io/part-of: cicd
            app.kubernetes.io/version: 1.0.0
            custom-label: custom label
            exordis/application: cicd-sample
            exordis/application-instance: docs
            exordis/application-type: service
            exordis/application-workload: "true"
            exordis/environment: test
            exordis/product: Some Product
            exordis/subsystem: cicd
            helm.sh/chart: cicd-subsystem-application-0.1.0
        spec:
          containers:
            - envFrom:
                - secretRef:
                    name: cicd-sample-docs-external-full
                - secretRef:
                    name: cicd-sample-docs-secret-without-containers
                - secretRef:
                    name: cicd-sample-docs-secret-with-containers
                - configMapRef:
                    name: cicd-sample-docs-envs
                - configMapRef:
                    name: cicd-sample-docs-config-map-without-containers
                - configMapRef:
                    name: cicd-sample-docs-config-map-with-containers
              image: registry.gitlab.com/cicd-unittests:1.0.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 80
                timeoutSeconds: 1
              name: application
              ports:
                - containerPort: 80
                  name: http
                  protocol: TCP
              readinessProbe:
                failureThreshold: 30
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 80
                timeoutSeconds: 1
              resources:
                limits:
                  cpu: 200m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 64Mi
              startupProbe:
                failureThreshold: 30
                periodSeconds: 5
                successThreshold: 1
                tcpSocket:
                  port: 80
                timeoutSeconds: 1
              volumeMounts:
                - mountPath: /some-data
                  name: volume1
                - mountPath: /pvc-data
                  name: mypvc
            - envFrom:
                - secretRef:
                    name: cicd-sample-docs-external-full
                - secretRef:
                    name: cicd-sample-docs-secret-without-containers
                - configMapRef:
                    name: cicd-sample-docs-envs
                - configMapRef:
                    name: cicd-sample-docs-config-map-without-containers
              image: docker.io/jsreport/jsreport:4.7.0
              imagePullPolicy: IfNotPresent
              name: jsreport
              resources:
                limits:
                  cpu: 200m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 64Mi
              volumeMounts:
                - mountPath: /some-another-data-but-same-as-for-application
                  name: volume1
          initContainers:
            - envFrom:
                - secretRef:
                    name: cicd-sample-docs-external-full
                - secretRef:
                    name: cicd-sample-docs-secret-without-containers
                - configMapRef:
                    name: cicd-sample-docs-envs
                - configMapRef:
                    name: cicd-sample-docs-config-map-without-containers
              image: registry.gitlab.com/my-migration-image:1.0.0
              imagePullPolicy: Always
              name: migration
              resources:
                limits:
                  cpu: 200m
                  memory: 256Mi
                requests:
                  cpu: 50m
                  memory: 64Mi
              volumeMounts: []
          serviceAccountName: cicd-sample-docs-workload
          terminationGracePeriodSeconds: 60
          volumes:
            - name: mypvc
              persistentVolumeClaim:
                claimName: cicd-sample-docs-mypvc
            - emptyDir:
                sizeLimit: 100Mi
              name: volume1
  9: |
    apiVersion: external-secrets.io/v1
    kind: ExternalSecret
    metadata:
      annotations:
        extra-annotation: annotation value
        extra-secret-annotation: annotation value
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        extra-label: label value
        extra-secret-label: label value
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-external-full
      namespace: cicd-test
    spec:
      data:
        - remoteRef:
            key: SITE_LOGIN
          secretKey: LOGIN
        - remoteRef:
            key: SITE_PASSWORD
          secretKey: PASSWORD
      refreshInterval: 1m
      secretStoreRef:
        kind: ClusterSecretStore
        name: cicd-test
      target:
        creationPolicy: Owner
        deletionPolicy: Retain
        name: cicd-sample-docs-external-full
        template:
          data:
            AUTH: '{{ `{{ .LOGIN }}:{{ .PASSWORD }}` }}'
            LOGIN: '{{ .LOGIN }}'
            PASSWORD: '{{ .PASSWORD }}'
          metadata:
            annotations:
              extra-annotation: annotation value
              extra-secret-annotation: annotation value
            labels:
              app.kubernetes.io/component: cicd-sample
              app.kubernetes.io/instance: docs
              app.kubernetes.io/managed-by: helm
              app.kubernetes.io/name: cicd-sample
              app.kubernetes.io/part-of: cicd
              app.kubernetes.io/version: 1.0.0
              exordis/application: cicd-sample
              exordis/application-instance: docs
              exordis/application-type: service
              exordis/environment: test
              exordis/product: Some Product
              exordis/subsystem: cicd
              extra-label: label value
              extra-secret-label: label value
              helm.sh/chart: cicd-subsystem-application-0.1.0
          templateFrom:
            - configMap:
                items:
                  - keys: config.yml
                name: cicd-sample-docs-external-secret-template
  10: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-full
      namespace: cicd-test
    spec:
      rules:
        - host: host1.local
          http:
            paths:
              - backend:
                  service:
                    name: cicd-sample-docs-full
                    port:
                      name: api
                path: /api
                pathType: Prefix
              - backend:
                  service:
                    name: cicd-sample-docs-full
                    port:
                      name: metrics
                path: /metrics
                pathType: Exact
        - host: host2.local
          http:
            paths:
              - backend:
                  service:
                    name: cicd-sample-docs-full
                    port:
                      name: api
                path: /api
                pathType: Prefix
              - backend:
                  service:
                    name: cicd-sample-docs-full
                    port:
                      name: metrics
                path: /metrics
                pathType: Exact
        - host: host3.local
          http:
            paths:
              - backend:
                  service:
                    name: cicd-sample-docs-full
                    port:
                      name: api
                path: /api
                pathType: Prefix
              - backend:
                  service:
                    name: cicd-sample-docs-full
                    port:
                      name: metrics
                path: /metrics
                pathType: Exact
        - host: example.com
          http:
            paths:
              - path: /
                pathType: Prefix
        - host: example.local
          http:
            paths:
              - path: /
                pathType: Prefix
        - host: host1.local
          http:
            paths:
              - path: /default
                pathType: Prefix
        - host: host2.local
          http:
            paths:
              - path: /default
                pathType: Prefix
      tls:
        - hosts:
            - host1.local
            - host2.local
            - host3.local
            - example.com
            - example.local
          secretName: cicd-sample-docs-full-tls
  11: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-minimum
      namespace: cicd-test
    spec:
      rules:
        - host: host1.local
          http:
            paths:
              - backend:
                  service:
                    name: cicd-sample-docs-full
                    port:
                      name: api
                path: /api
                pathType: Prefix
              - backend:
                  service:
                    name: cicd-sample-docs-full
                    port:
                      name: metrics
                path: /metrics
                pathType: Prefix
      tls:
        - hosts:
            - host1.local
          secretName: cicd-sample-docs-minimum-tls
  12: |
    apiVersion: networking.k8s.io/v1
    kind: Ingress
    metadata:
      annotations:
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-pure-spec
      namespace: cicd-test
    spec:
      defaultBackend:
        service:
          name: full
          port:
            name: api
      rules:
        - host: host1.k3s.local
          http:
            paths:
              - path: /api/v3(/|$)(.*)
                pathType: Prefix
              - path: /
                pathType: Prefix
      tls:
        - hosts:
            - host1.k3s.local
          secretName: testsecret-tls
  13: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-mypvc
      namespace: cicd-test
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
  14: |
    apiVersion: v1
    data: {}
    kind: Secret
    metadata:
      annotations:
        extra-annotation: annotation value
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        extra-label: label value
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-secret-full-metadata
      namespace: my-namespace
    stringData:
      password: passw0rd
    type: Opaque
  15: |
    apiVersion: v1
    data: {}
    kind: Secret
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-secret-with-containers
      namespace: cicd-test
    stringData:
      password: passw0rd
    type: Opaque
  16: |
    apiVersion: v1
    data: {}
    kind: Secret
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-secret-without-containers
      namespace: cicd-test
    stringData:
      token: t0ken
    type: Opaque
  17: |
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-workload
      namespace: cicd-test
  18: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      annotations: {}
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
      name: cicd-sample-docs-workload
      namespace: cicd-test
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cicd-test-sample-docs-application
    subjects:
      - kind: ServiceAccount
        name: cicd-sample-docs-workload
        namespace: cicd-test
  19: |
    apiVersion: monitoring.coreos.com/v1
    kind: ServiceMonitor
    metadata:
      annotations:
        monitor-annotation: full service monitor
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
        monitor-labels: full service monitor
      name: cicd-sample-docs-full
      namespace: cicd-test
    spec:
      endpoints:
        - interval: 10s
          path: /extra-metrics
          port: api
        - interval: 30s
          port: metrics
          relabelings:
            - action: labeldrop
              regex: pod
      jobLabel: full-service
      namespaceSelector:
        matchNames:
          - cicd-test
      selector:
        matchLabels:
          exordis/application: cicd-sample
          exordis/application-instance: docs
          exordis/application-workload: "true"
          exordis/environment: test
          exordis/subsystem: cicd
  20: |
    apiVersion: v1
    kind: Service
    metadata:
      annotations:
        service-annotation: full service definition
      labels:
        app.kubernetes.io/component: cicd-sample
        app.kubernetes.io/instance: docs
        app.kubernetes.io/managed-by: helm
        app.kubernetes.io/name: cicd-sample
        app.kubernetes.io/part-of: cicd
        app.kubernetes.io/version: 1.0.0
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-type: service
        exordis/environment: test
        exordis/product: Some Product
        exordis/subsystem: cicd
        helm.sh/chart: cicd-subsystem-application-0.1.0
        service-label: full service definition
      name: cicd-sample-docs-full
      namespace: cicd-test
    spec:
      ports:
        - name: api
          port: 8080
          protocol: TCP
          targetPort: http
        - name: metrics
          port: 81
          protocol: TCP
          targetPort: 80
      selector:
        exordis/application: cicd-sample
        exordis/application-instance: docs
        exordis/application-workload: "true"
        exordis/environment: test
        exordis/subsystem: cicd
      sessionAffinity: None
      type: LoadBalancer
